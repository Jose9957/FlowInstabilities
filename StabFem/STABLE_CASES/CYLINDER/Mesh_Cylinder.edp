/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
/////
///// 
/////                              MESH GENERATOR for a cylinder
/////
/////             This file creates a mesh and an initial base flow for the "StabFem" program.
/////
/////             input parameters : Xmin Xmax Ymax
/////  			  
/////
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

include "StabFem.idp";
//string ffdatadir = "./WORK/";

// load "iovtk"                       /// load library to write in vtk format
// load "BinaryIO"                 ////load libary to write the solution in binary form
// load "BinaryIO_64"




real RADIUS=0.5;         /////// Cylinder Radius
 


real n=.5;                 
int ns=50; 

cout << " Generation of an initial mesh for a 2D cylinder" << endl;
cout << " Enter the dimensions xmin, xmax, ymax ? " << endl; 

real xinlet = getARGV("-Xmin",-40.);
real xoutlet = getARGV("-Xmax",80.);
real yside = getARGV("-Ymax",40.);

cout << "$$ Dimensions of domain : " << endl << "     Xmin = " << xinlet << " ; Xmax = " << xoutlet << " ; Ymax = " << yside << endl;  

// cylinder center is in (0,0)

border cylinder(t=0,pi){ x=RADIUS*cos(t);y=RADIUS*sin(t);label=2;}
border inlet(t=0,1){ x=xinlet;y=yside*(1-t);label=1;}
border axis1(t=0,1){ x=xinlet+(-RADIUS-xinlet)*t;y=0;label=6;}
border axis2(t=0,1){ x=RADIUS+(xoutlet-RADIUS)*t;y=0;label=6;}
border outlet(t=0,1){ x=xoutlet;y=yside*t;label=3;}
border latsup(t=0,1){ x=xoutlet-(xoutlet-xinlet)*t;y=yside;label=3;} // label 3 : same conditions as at outlet



/////////////////////////////////////////////////////////////////////////////////
// plot(inlet(10)+latinf(10)+outlet(10)+latsup(10)+cylref(10)+cylinder(10)+a1(10)+a2(10)+a3(10)+a4(10));
/////// Just to check the borders
/////////////////////////////////////////////////////////////////////////////////
// Build a mesh 

mesh th=buildmesh(inlet(yside*n)+axis1((-RADIUS-xinlet)*n)+axis2((xoutlet-RADIUS)*n)+outlet(2*yside*n)+latsup((xoutlet-xinlet)*n)+cylinder(-ns));
plot(th,wait=0);


///////////////////////////////////////////////////////////////////////////////

// SAVE THE MESH in mesh.msh file 
savemesh(th,ffdatadir+"mesh.msh");

// AUXILIARY FILE  for Stabfem : mesh.ff2m
IFMACRO(SFWriteMesh)
	SFWriteMesh(ffdatadir+"mesh.ff2m",th,"initial")
ENDIFMACRO

// SECOND AUXILIARY FILE NEEDED TO PLOT P2 and vectorized DATA
IFMACRO(SFWriteConnectivity)
	SFWriteConnectivity(ffdatadir+"mesh_connectivity.ff2m",th);
ENDIFMACRO
