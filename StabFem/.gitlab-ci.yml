stages:
  - test
  - manual
  - publish
  - pages

.publish:
  stage: publish
  tags:
    - stabfem
    - prodcom
  script:
    - ./.gitlab-ci-publish-script.sh
  artifacts:
    expire_in: "1 week"
    paths:
      - ./*CASES/*/html/*
      - ./*CASES/*/.*.cached_*
      - ./*CASES/*/*/html/*
      - ./*CASES/*/*/.*.cached_*

publish-restore-cache-other:
  extends: .publish
  cache:
    key: "publish-other-cache"
    paths:
      - ./*CASES/*/html/*
      - ./*CASES/*/.*.cached_*
      - ./*CASES/*/*/html/*
      - ./*CASES/*/*/.*.cached_*
    policy: pull
  script:
    - echo "Restoring cache and transmiting it to page job."
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
      when: never
    - if: '$GENERATE_PAGE_ONLY'
      when: always

publish-master:
# this job is not used any more
  extends: .publish
#  resource_group: publish_cache_master
  cache:
    key: "publish-master-cache"
    paths:
      - ./*CASES/*/html/*
      - ./*CASES/*/.*.cached_*
      - ./*CASES/*/*/html/*
      - ./*CASES/*/*/.*.cached_*
    policy: pull-push
  rules:
    - if: '$GENERATE_PAGE_ONLY'
      when: never
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: never

publish-other:
  extends: .publish
#  resource_group: publish_cache_other
  cache:
    key: "publish-other-cache"
    paths:
      - ./*CASES/*/html/*
      - ./*CASES/*/.*.cached_*
      - ./*CASES/*/*/html/*
      - ./*CASES/*/*/.*.cached_*
    policy: pull-push
  rules:
    - if: '$GENERATE_PAGE_ONLY'
      when: never
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /\[\[PUBLISH\]\]/'
      when: on_success
    - if: '$GENERATE_PAGE'
      when: always

pages:
  stage: pages
  tags:
    - stabfem
    - prodcom
  script:
    - ./.gitlab-ci-page-script.sh
    - ./.gitlab-ci-autoindex-script.sh
# NB this should be .gitlab-ci-autoindex-master-script.sh for master branch
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /\[\[PUBLISH\]\]/'
      when: on_success
    - if: '$GENERATE_PAGE'
      when: always
    - if: '$GENERATE_PAGE_ONLY'
      when: always

.autorun:
  stage: test
  tags:
    - prodcom
    - stabfem
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    expire_in: "4 weeks"
    paths:
      - autorun.log
    when: always
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$GENERATE_PAGE_ONLY'
      when: never
    - if: '$GENERATE_MANUAL_ONLY'
      when: never
#    - if: '$CI_COMMIT_MESSAGE =~ /\[\[MANUAL\]\]/'
#      when: never
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ /^develop/ || $CI_COMMIT_REF_NAME =~ /^feature/ || $CI_COMMIT_REF_NAME =~ /beta$/ || $CI_COMMIT_REF_NAME =~ /^merge/'
      when: on_success

autorun-matlab-ff4:
  extends: .autorun
  script:
    - ./.gitlab-ci-autorun.sh -m --ffver 4

autorun-octave-ff4:
  extends: .autorun
  script:
    - ./.gitlab-ci-autorun.sh --ffver 4

#autorun-matab-ff3:
#  extends: .autorun
#  script:
#    - ./gitlab-ci-autorun.sh -m --ffver 3

autorun-matlab-ff4-long:
  extends: .autorun
  script:
    - ./.gitlab-ci-autorun.sh -m --ffver 4 --list long
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
      when: on_success
    - if: '$CI_COMMIT_TAG'
      when: on_success

autorun-octave-ff4-long:
  extends: .autorun
  script:
    - ./.gitlab-ci-autorun.sh --ffver 4 --list long
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[\[OCTAVE\]\]/'
      when: on_success
    - if: '$CI_COMMIT_TAG'
      when: on_success

makepdf:
  stage: manual
  tags:
    - stabfem
  script:
#    - ./.gitlab-ci-manual.sh
    - cd ./99_Documentation/MANUAL/
    - pdflatex main.tex
    - pdflatex main.tex
  artifacts:
    name: "$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: never
    paths:
      - ./99_Documentation/MANUAL/main.pdf
    when: on_success
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "develop"'
      when: on_success
    - if: '$CI_COMMIT_MESSAGE =~ /\[\[MANUAL\]\]/'
      when: on_success
    - if: '$GENERATE_MANUAL_ONLY'
      when: always
